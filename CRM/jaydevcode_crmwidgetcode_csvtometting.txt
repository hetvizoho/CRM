<!DOCTYPE html>
<html lang="en">
<head>
    <script src="https://live.zwidgets.com/js-sdk/1.2/ZohoEmbededAppSDK.min.js"></script>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Import Meetings</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        h2 { color: #333; }
        a { text-decoration: none; color: blue; display: block; margin-bottom: 10px; }
        input[type="file"] { margin: 10px 0; }
        button { background-color: #007bff; color: white; border: none; padding: 10px 15px; cursor: pointer; }
        button:hover { background-color: #0056b3; }
        .success { margin-top: 15px; font-weight: bold; color: green; }
        .error { margin-top: 15px; font-weight: bold; color: red; }
    </style>
</head>
<body>
 
    <h2>Import Meetings</h2>
   
    <a href="Meeting_CSV_Template.csv" download>Download CSV Template</a>
   
    <p>Select a file:</p>
    <input type="file" id="fileInput">
    <button id="submitBtn">Submit</button>
 
    <p id="successMsg" class="success" style="display: none;">Meetings Successfully Imported</p>
    <p id="errorMsg" class="error" style="display: none;">Error: Import Failed</p>
 
    <script>
        ZOHO.embeddedApp.on("PageLoad", function(data) {
            console.log("Zoho Page Data: ", data);
            ZOHO.embeddedApp.init().then(() => {
                console.log("Zoho SDK Initialized Successfully");
            }).catch(err => console.error("Zoho SDK Initialization Failed:", err));
        });
 
        document.getElementById("submitBtn").addEventListener("click", function() {
            const fileInput = document.getElementById("fileInput");
            if (fileInput.files.length === 0) {
                alert("Please select a CSV file before submitting.");
                return;
            }
 
            const file = fileInput.files[0];
            const reader = new FileReader();
            reader.onload = function(event) {
                const csvData = event.target.result;
                processCSV(csvData);
            };
            reader.readAsText(file);
        });
 
        function processCSV(csvData) {
            const lines = csvData.split("\n").map(line => line.trim()).filter(line => line);
            const headers = lines[0].split(",").map(h => h.trim());
 
            ZOHO.embeddedApp.init().then(() => {
                console.log("Zoho SDK Ready - Processing CSV...");
 
                for (let i = 1; i < lines.length; i++) {
                    const data = lines[i].split(",").map(d => d.trim());
                    if (data.length < headers.length) continue;
 
                    const eventTitle = data[0] || "";  // Validate Event_Title
                    if (!eventTitle) {
                        console.error(`Skipping row ${i}: Event_Title is missing`);
                        document.getElementById("errorMsg").innerText = `Error: Missing Event Title in row ${i}`;
                        document.getElementById("errorMsg").style.display = "block";
                        continue;
                    }
 
                    const meetingData = {
                        "data": [{
                            "Event_Title": eventTitle,
                            "Start_DateTime": formatDate(data[1]),
                            "End_DateTime": formatDate(data[2]),
                            "All_day": data[3].toLowerCase() === "true",
                            "Description": data[4] || "",
                            "Venue": data[5] || "Not Specified",
                            "Owner": data[6] ? { "id": data[6] } : undefined,
                            "What_Id": data[7] ? { "id": data[7] } : undefined,
                            "Who_Id": data[8] ? { "id": data[8] } : undefined,
                            "Remind_Participants": data[9] ? [parseInt(data[9])] : undefined
                        }],
                        "trigger": ["workflow"]
                    };
 
                    console.log("Sending Data:", JSON.stringify(meetingData, null, 2));
 
                    ZOHO.CRM.API.insertRecord({ Entity: "Events", APIData: meetingData })
                        .then(response => {
                            console.log("Meeting Created:", response);
                            if (response.data && response.data[0].code === "SUCCESS") {
                                document.getElementById("successMsg").style.display = "block";
                            } else {
                                document.getElementById("errorMsg").innerText = `Error: ${response.data[0].message}`;
                                document.getElementById("errorMsg").style.display = "block";
                                console.error("API Response Error:", JSON.stringify(response, null, 2));
                            }
                        })
                        .catch(error => {
                            console.error("Error Creating Meeting:", JSON.stringify(error, null, 2));
                            document.getElementById("errorMsg").innerText = "Error: API Request Failed";
                            document.getElementById("errorMsg").style.display = "block";
                        });
                }
            }).catch(error => {
                console.error("Zoho SDK Initialization Error Before Insert:", error);
            });
        }
 
        function formatDate(inputDate) {
            if (!inputDate) return "";
            const date = new Date(inputDate);
            if (isNaN(date.getTime())) return "";
            return date.toISOString();
        }
    </script>
 
</body>
</html>
 
 